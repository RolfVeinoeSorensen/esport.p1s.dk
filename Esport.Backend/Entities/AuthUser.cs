// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Esport.Backend.Entities;

public partial class AuthUser
{
    public int Id { get; set; }

    public int? ParentId { get; set; }

    public string FirstName { get; set; }

    public string LastName { get; set; }

    public string Username { get; set; }

    public DateTime CreatedUtc { get; set; }

    [JsonIgnore]
    public string PasswordHash { get; set; }

    [JsonIgnore]
    public string PasswordResetToken { get; set; }
    [JsonIgnore]
    public DateTime PasswordResetTokenExpiration { get; set; }

    public string AddressStreet { get; set; }

    public int? AddressStreetNumber { get; set; }

    public string AddressFloor { get; set; }

    public string AddressSide { get; set; }

    public string AddressPostalCode { get; set; }

    public string AddressCity { get; set; }

    public string Mobile { get; set; }

    public bool ConsentShowImages { get; set; }

    public bool CanBringLaptop { get; set; }

    public bool CanBringStationaryPc { get; set; }

    public bool CanBringPlaystation { get; set; }

    [JsonIgnore]
    public string ActivateAccountToken { get; set; }
    [JsonIgnore]
    public DateTime? ActivateAccountTokenExpiration { get; set; }

    public bool IsActivated { get; set; }

    public int? ImageId { get; set; }

    public virtual ICollection<Event> Events { get; set; } = new List<Event>();

    public virtual ICollection<EventsUser> EventsUsers { get; set; } = new List<EventsUser>();

    public virtual File Image { get; set; }

    public virtual ICollection<AuthUser> InverseParent { get; set; } = new List<AuthUser>();

    public virtual ICollection<News> NewsCreatedByNavigations { get; set; } = new List<News>();

    public virtual ICollection<News> NewsUpdatedByNavigations { get; set; } = new List<News>();

    public virtual AuthUser Parent { get; set; }

    public virtual ICollection<UsersGame> UsersGames { get; set; } = new List<UsersGame>();

    public virtual ICollection<AuthRole> Roles { get; set; } = new List<AuthRole>();

    public virtual ICollection<Team> Teams { get; set; } = new List<Team>();
}